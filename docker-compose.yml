version: "3.9"

services:
  kafka:
    image: "bitnami/kafka:3.2.0"
    container_name: saas-psa-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_OPTS=-Djava.net.preferIPv4Stack=True
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENERS=LISTENER_KAFKA://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_KAFKA://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_KAFKA:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_KAFKA
      - KAFKA_NUM_PARTITIONS=1
    volumes:
      - kafka-data:/bitnami/kafka/data:rw
    depends_on:
      zookeeper:
        condition: service_started

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: saas-psa-zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zk-data:/bitnami/zookeeper/data:rw
  # AKHQ, a Kafka UI, From https://github.com/tchiotludo/akhq/blob/dev/docker-compose.yml
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
              schema-registry:
                url: "http://apicurio-registry:8080/apis/ccompat/v6"
    ports:
      - "8080:8080"
    links:
      - kafka
      - apicurio-registry

  apicurio-registry:
    image: apicurio/apicurio-registry-mem:latest-release
    ports:
      - "8085:8080"
volumes:
  zk-data:
  kafka-data:
  mysql-data:
  bidding-engine-mysql-data:
  configuration-service-mysql-data: